{"version":3,"file":"index.mjs","sources":["../lib/negafibonacci.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isInteger = require( '@stdlib/math-base-assert-is-integer' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar MAX_FIBONACCI = require( '@stdlib/constants-float64-max-safe-nth-fibonacci' );\nvar NEGAFIBONACCI = require( './negafibonacci.json' );\n\n\n// MAIN //\n\n/**\n* Computes the nth negaFibonacci number.\n*\n* @param {NonPositiveInteger} n - the negaFibonacci number to compute\n* @returns {integer} negaFibonacci number\n*\n* @example\n* var y = negafibonacci( 0 );\n* // returns 0\n*\n* @example\n* var y = negafibonacci( -1 );\n* // returns 1\n*\n* @example\n* var y = negafibonacci( -2 );\n* // returns -1\n*\n* @example\n* var y = negafibonacci( -3 );\n* // returns 2\n*\n* @example\n* var y = negafibonacci( -4 );\n* // returns -3\n*\n* @example\n* var y = negafibonacci( -5 );\n* // returns 5\n*\n* @example\n* var y = negafibonacci( -6 );\n* // returns -8\n*\n* @example\n* var y = negafibonacci( NaN );\n* // returns NaN\n*\n* @example\n* var y = negafibonacci( -3.14 );\n* // returns NaN\n*/\nfunction negafibonacci( n ) {\n\tvar an;\n\tif (\n\t\tisnan( n ) ||\n\t\tisInteger( n ) === false ||\n\t\tn > 0\n\t) {\n\t\treturn NaN;\n\t}\n\tan = abs( n );\n\tif ( an > MAX_FIBONACCI ) {\n\t\treturn NaN;\n\t}\n\treturn NEGAFIBONACCI[ an ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = negafibonacci;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the nth negaFibonacci number.\n*\n* @module @stdlib/math-base-special-negafibonacci\n*\n* @example\n* var negafibonacci = require( '@stdlib/math-base-special-negafibonacci' );\n*\n* var y = negafibonacci( 0 );\n* // returns 0\n*\n* y = negafibonacci( -1 );\n* // returns 1\n*\n* y = negafibonacci( -2 );\n* // returns -1\n*\n* y = negafibonacci( -3 );\n* // returns 2\n*\n* y = negafibonacci( -4 );\n* // returns -3\n*\n* y = negafibonacci( -5 );\n* // returns 5\n*\n* y = negafibonacci( -6 );\n* // returns -8\n*/\n\n// MODULES //\n\nvar negafibonacci = require( './negafibonacci.js' );\n\n\n// EXPORTS //\n\nmodule.exports = negafibonacci;\n"],"names":["isnan","require$$0","isInteger","require$$1","abs","require$$2","MAX_FIBONACCI","require$$3","NEGAFIBONACCI","lib","n","an","NaN"],"mappings":";;mYAsBIA,EAAQC,EACRC,EAAYC,EACZC,EAAMC,EACNC,EAAgBC,EAChBC,owBAkEJ,ICnCAC,EDgBA,SAAwBC,GACvB,IAAIC,EACJ,OACCX,EAAOU,KACY,IAAnBR,EAAWQ,IACXA,EAAI,IAILC,EAAKP,EAAKM,IACAJ,EAHFM,IAMDJ,EAAeG"}